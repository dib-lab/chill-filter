GENOMES = ['bosTau9',
           'canFam6',
           'equCab3',
           'felCat9',
           'galGal6',
           'hg38',
           'mm39',
           'oviAri4',
           'susScr11']

rule all:
    input:
        'plants+animals+gtdb.rocksdb',
        'plants+animals+gtdb.merged.sig.zip',
        'gtdb.rocksdb',
        'gtdb.merged.sig.zip',
        'podar-ref.rocksdb',
        'gtdb-rs220-phylum.mf.csv',
        'gtdb-rs220-phylum.rocksdb',
        'genbank-plants-2024.07.rocksdb',
        'euk-other.rocksdb',
        'euk-other-merged.rocksdb',
        'fungi.rocksdb',
        'fungi-merged.rocksdb',

rule index_manifest:
    input:
        "{name}.mf.csv",
    output:
        protected(directory("{name}.rocksdb")),
    shell: """
        sourmash scripts index {input} -o {output} -k 51
    """

rule merge_manifest:
    input:
        "{name}.mf.csv",
    output:
        '{name}.merged.sig.zip',
    shell: """
        sourmash sig merge -k 51 {input} -o {output} --flatten
    """

rule gtdb:
    input:
        'outputs/all-gtdb-rs220.k51.100k.sig.zip',
    output:
        'gtdb.mf.csv',
    shell: """
        sourmash sig collect -F csv {input} -o {output} --abspath
    """


rule plants_animals_and_gtdb:
    input:
        expand('outputs/{g}.k51.100k.sig.zip', g=GENOMES),
        'outputs/all-gtdb-rs220.k51.100k.sig.zip',
        'outputs/genbank-plants-merged-2024.07.sig.zip',
        'outputs/fungi-merged.sig.zip',
        'outputs/euk-other-merged.sig.zip',
    output:
        'plants+animals+gtdb.mf.csv',
    shell: """
        sourmash sig collect -F csv {input} -o {output} --abspath
    """


rule downsample:
    input:
        "downloads/{g}.sig.zip",
    output:
        "outputs/{g}.k51.100k.sig.zip",
    shell: """
        sourmash sig downsample -k 51 --scaled 100_000 {input} -o {output}
    """


rule merge_microbial:
    input:
        ancient('downloads/gtdb-rs220-k51-s100_000.zip'),
    output:
        protected('outputs/all-gtdb-rs220.k51.100k.sig.zip'),
    shell: """
        sourmash sig merge {input} -o {output} --set-name "bacteria and archaea (GTDB rs220)"
    """
    
rule podar_ref:
    input:
        "downloads/podar-ref.sig.zip",
    output:
        "podar-ref.mf.csv",
    shell: """
        sourmash sig collect -F csv {input} -o {output} --abspath
    """

rule gtdb_merged_phylum:
    input:
        "downloads/gtdb-rs220-phylum.sig.zip",
    output:
        "gtdb-rs220-phylum.mf.csv",
    shell: """
        sourmash sig collect -F csv {input} -o {output} --abspath
    """

rule plants_individual_mf:
    input:
        "downloads/genbank-plants-2024.07.k51.s100_000.sig.zip",
    output:
        "genbank-plants-2024.07.mf.csv",
    shell: """
        sourmash sig collect -F csv {input} -o {output} --abspath
    """

rule plants_merged_all:
    input:
        "downloads/genbank-plants-2024.07.k51.s100_000.sig.zip",
    output:
        "outputs/genbank-plants-merged-2024.07.sig.zip",
    shell: """
        sourmash sig merge --set-name genbank-plants {input} -o {output}
    """

rule fungi_merged_all:
    input:
        "downloads/fungi.k51.s100_000.sig.zip",
    output:
        "outputs/fungi-merged.sig.zip",
    shell: """
        sourmash sig merge --set-name genbank-fungi {input} -o {output}
    """

rule fungi_mf:
    input:
        "downloads/fungi.k51.s100_000.sig.zip",
    output:
        "fungi.mf.csv",
    shell: """
        sourmash sig collect -F csv {input} -o {output} --abspath
    """

rule fungi_merged_mf:
    input:
        "outputs/fungi-merged.sig.zip",
    output:
        "fungi-merged.mf.csv",
    shell: """
        sourmash sig collect -F csv {input} -o {output} --abspath
    """

rule euk_other_merged_all:
    input:
        "downloads/euk-other.k51.s100_000.sig.zip",
    output:
        "outputs/euk-other-merged.sig.zip",
    shell: """
        sourmash sig merge --set-name euk-other {input} -o {output}
    """

rule euk_other_mf:
    input:
        "downloads/euk-other.k51.s100_000.sig.zip",
    output:
        "euk-other.mf.csv",
    shell: """
        sourmash sig collect -F csv {input} -o {output} --abspath
    """

rule euk_other_merged_mf:
    input:
        "outputs/euk-other-merged.sig.zip",
    output:
        "euk-other-merged.mf.csv",
    shell: """
        sourmash sig collect -F csv {input} -o {output} --abspath
    """
